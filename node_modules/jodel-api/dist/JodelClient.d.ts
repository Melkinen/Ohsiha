/// <reference types="node" />
import * as Types from "./JodelInterfaces";
import { JodelConfig } from "./JodelConfig";
export declare class JodelClient {
    private readonly config;
    private _accessToken;
    private readonly api;
    private ownId;
    readonly accessToken: Types.AccessToken | undefined;
    constructor(config: JodelConfig, _accessToken?: Types.AccessToken);
    login(location: Types.Location): Promise<void>;
    register(location: Types.Location): Promise<void>;
    loginWithToken(accessToken: Types.AccessToken): Promise<void>;
    updateLocation(countryCode: string, lat: number, long: number, accuracy?: number): Promise<Types.LocationUpdateResponse>;
    postImage(image: Buffer, color: Types.Color, location: Types.Location): Promise<Types.SendPostResponse>;
    post(message: string, color: Types.Color, location: Types.Location): Promise<Types.SendPostResponse>;
    reply(ancestor: Types.PostId, message: string, location: Types.Location): Promise<Types.SendPostResponse>;
    getMostPopularPosts(position?: Types.Coordinates, after?: Types.PostId): Promise<Types.GetPostsResponse>;
    getMostDiscussedPosts(position?: Types.Coordinates, after?: Types.PostId): Promise<Types.GetPostsResponse>;
    getMostRecentPosts(position?: Types.Coordinates, after?: Types.PostId): Promise<Types.GetPostsResponse>;
    getPost(id: Types.PostId, highlight?: string): Promise<Types.Post>;
    getKarma(): Promise<Types.GetKarmaResponse>;
    private static randomAccuracy();
}
